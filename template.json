{
  "requirements": {
    "cloud_provider": "aws",
    "image": "atomized-node14"
  },
  "build": [
    {
      "name": "Installing Dependencies",
      "action": "cmd.run",
      "content": "apt-get install zip"
    },
    {
      "name": "Initializing Infrastructure",
      "action": "infrastructure.init"
    },
    {
      "name": "Cloning Repository",
      "action": "cmd.run",
      "content": "git init\ngit remote add origin https://github.com/atomizedhq/deploy-template-ec2-runcommand.git\ngit fetch origin HEAD\ngit reset --hard FETCH_HEAD"
    },
    {
      "name": "Building Function Code",
      "action": "cmd.run",
      "content": "GOOS=linux go build -o lambda -mod vendor -v lambda.go"
    },
    {
      "name": "Compressing Function Code",
      "action": "cmd.run",
      "content": "zip lambda.zip lambda"
    },
    {
      "name": "Planning Infrastructure",
      "action": "infrastructure.plan"
    },
    {
      "name": "Applying Infrastructure",
      "action": "infrastructure.apply"
    }
  ],
  "terraform": {
    "locals": {
      "name": "${trim(substr(\"<<project.alias>>-<<project.id>>\",0,63), \"-\")}",
      "vpc_subnets": "${split(\",\", var.vpc_subnets)}",
      "security_group": "${length(data.aws_instance.instance.vpc_security_group_ids) > 0 ? sort(data.aws_instance.instance.vpc_security_group_ids)[0] : length(data.aws_instance.instance.security_groups) > 0 ? sort(data.aws_instance.instance.security_groups)[0] : null}"
    },
    "output": {
      "function_name": {
        "description": "Name of the function",
        "value": "${aws_lambda_function.lambda_function.function_name}"
      },
      "arn": {
        "description": "ARN of the function",
        "value": "${aws_lambda_function.lambda_function.arn}"
      },
      "log_group_name": {
        "description": "Name of the cloudwatch log group for the function",
        "value": "${aws_cloudwatch_log_group.cloudwatch_log_group.name}"
      }
    },
    "data": {
      "aws_instance": {
        "instance": {
          "instance_id": "${var.instance_id}"
        }
      }
    },
    "resource": {
      "aws_lambda_function": {
        "lambda_function": {
          "function_name": "${local.name}",
          "role": "${aws_iam_role.iam_role.arn}",
          "runtime": "go1.x",
          "handler": "lambda",
          "timeout": "${var.timeout != \"\" ? var.timeout : null}",
          "memory_size": "${var.memory_size}",
          "vpc_config": {
            "subnet_ids": "${local.vpc_subnets}",
            "security_group_ids": [
              "${aws_security_group.security_group.id}",
              "${local.security_group}"
            ]
          },
          "filename": "/build/lambda.zip",
          "source_code_hash": "${filebase64sha256(/build/lambda.zip)}",
          "environment": {
            "variables": {
              "INSTANCE_ID": "${var.instance_id}",
              "INSTANCE_USER": "${var.instance_user}",
              "INSTANCE_COMMAND": "${var.instance_command}"
            }
          }
        }
      },
      "aws_iam_role": {
        "iam_role": {
          "name": "${local.name}",
          "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Effect\":\"Allow\",\"Sid\":\"\"},{\"Sid\":\"preventLogGroupRecreate\",\"Effect\":\"Deny\",\"Action\":[\"logs:CreateLogGroup\"],\"Resource\":[\"*\"]}]}",
          "tags": {
            "atomized": "true"
          }
        }
      },
      "aws_iam_role_policy_attachment": {
        "lambda_service_role_attachment": {
          "role": "${aws_iam_role.iam_role.name}",
          "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
          "lifecycle": {
            "create_before_destroy": true
          }
        }
      },
      "aws_security_group": {
        "security_group": {
          "name": "${local.name}",
          "description": "Allows egress from lambda function",
          "vpc_id": "${var.network}",
          "egress": [
            {
              "cidr_blocks": ["0.0.0.0/0"],
              "description": "allow outbound",
              "from_port": 0,
              "ipv6_cidr_blocks": null,
              "prefix_list_ids": null,
              "protocol": "-1",
              "security_groups": null,
              "self": null,
              "to_port": 0
            }
          ],
          "tags": {
            "atomized": "true"
          }
        }
      },
      "aws_cloudwatch_log_group": {
        "cloudwatch_log_group": {
          "name": "/aws/lambda/${local.name}",
          "retention_in_days": "${var.log_retention != \"\" ? var.log_retention : null}"
        }
      }
    },
    "variable": {
      "network": {
        "default": "<<project.metadata.network>>",
        "type": "string"
      },
      "vpc_subnets": {
        "default": "<<project.metadata.vpc_subnets>>",
        "type": "string"
      },
      "timeout": {
        "default": "<<project.metadata.timeout>>",
        "type": "string"
      },
      "memory_size": {
        "default": "<<project.metadata.memory_size>>",
        "type": "string"
      },
      "log_retention": {
        "default": "<<project.metadata.log_retention>>",
        "type": "string"
      },
      "instance_id": {
        "default": "<<project.metadata.instance_id>>",
        "type": "string"
      },
      "instance_user": {
        "default": "<<project.metadata.instance_user>>",
        "type": "string"
      },
      "instance_command": {
        "default": "<<project.metadata.instance_command>>",
        "type": "string"
      }
    }
  },
  "fields": [
    {
      "sections": [
        {
          "fields": [
            {
              "label": "Service VPC",
              "name": "network",
              "optionsFrom": {
                "titleKey": "name",
                "valueKey": "vpc_id",
                "values": "<<cloud.resources.vpcs>>"
              },
              "onChange": [
                {
                  "values": [
                    {
                      "key": "vpc_subnets",
                      "value": null
                    }
                  ]
                }
              ],
              "type": "select"
            },
            {
              "label": "VPC Subnets",
              "name": "vpc_subnets",
              "optionsFrom": {
                "visible": [
                  {
                    "conditions": ["valueFrom == <<project.metadata.network>>"],
                    "valueFrom": "vpc_id"
                  }
                ],
                "titleKey": "name",
                "valueKey": "subnet_id",
                "values": "<<cloud.resources.subnets>>"
              },
              "type": "multiselect",
              "visible": [
                {
                  "conditions": ["<<project.metadata.network>> not empty"]
                }
              ]
            }
          ]
        }
      ],
      "title": "Networking"
    },
    {
      "sections": [
        {
          "fields": [
            {
              "label": "EC2 Instance ID",
              "name": "instance_id",
              "type": "text",
              "required": true,
              "alerts": [
                {
                  "message": "EC2 Instance running the MySQL Server to be modified"
                }
              ]
            },
            {
              "label": "EC2 Instance User",
              "name": "instance_user",
              "type": "text",
              "required": true,
              "default": "ec2-user",
              "alerts": [
                {
                  "message": "Remote user used to access the EC2 Instance"
                }
              ]
            },
            {
              "label": "Command to Execute",
              "name": "instance_command",
              "type": "text",
              "required": true,
              "default": "ls -l",
              "alerts": [
                {
                  "message": "Command to be executed on the remote instance"
                }
              ]
            }
          ]
        }
      ],
      "title": "Remote Instance"
    },
    {
      "sections": [
        {
          "fields": [
            {
              "label": "Memory",
              "name": "memory_size",
              "required": true,
              "type": "select",
              "options": [
                {
                  "values": [
                    {
                      "title": "128 MB (small)",
                      "value": "128"
                    },
                    {
                      "title": "512 MB (medium)",
                      "value": "512"
                    },
                    {
                      "title": "1024 MB (large)",
                      "value": "1024"
                    }
                  ]
                }
              ]
            },
            {
              "label": "Timeout",
              "default": "30",
              "type": "number",
              "name": "timeout"
            },
            {
              "label": "Cloudwatch Log Retention",
              "name": "log_retention",
              "type": "select",
              "options": [
                {
                  "values": [
                    {
                      "title": "1 Day",
                      "value": "1"
                    },
                    {
                      "title": "3 Days",
                      "value": "3"
                    },
                    {
                      "title": "5 Days",
                      "value": "5"
                    },
                    {
                      "title": "7 Days",
                      "value": "7"
                    },
                    {
                      "title": "14 Days",
                      "value": "14"
                    },
                    {
                      "title": "30 Days",
                      "value": "30"
                    },
                    {
                      "title": "60 Days",
                      "value": "60"
                    },
                    {
                      "title": "90 Days",
                      "value": "90"
                    },
                    {
                      "title": "120 Days",
                      "value": "120"
                    },
                    {
                      "title": "150 Days",
                      "value": "150"
                    },
                    {
                      "title": "180 Days",
                      "value": "180"
                    },
                    {
                      "title": "365 Days",
                      "value": "365"
                    },
                    {
                      "title": "400 Days",
                      "value": "400"
                    },
                    {
                      "title": "545 Days",
                      "value": "545"
                    },
                    {
                      "title": "731 Days",
                      "value": "731"
                    },
                    {
                      "title": "1827 Days",
                      "value": "1827"
                    },
                    {
                      "title": "3653 Days",
                      "value": "3653"
                    },
                    {
                      "title": "Retain Logs Forever",
                      "value": "0"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "title": "Function Configuration"
    }
  ]
}
